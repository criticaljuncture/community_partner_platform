<% collapsed = (f.object.new_record? || f.object.errors.present?) ? 'open' : 'closed' %>

<%= modal(:basic,
  footer: false,
  header_icon: 'icon-cpp-handshake',
  header_text: I18n.t('community_programs.quality_element_description'),
  modal_class: "modal-wide quality-element-description-modal",
  modal_id: "quality-element-description-modal") do %>
  <% QualityElement.all.group_by(&:element_type).each do |type, quality_elements| %>
    <h4><%= type.capitalize %></h4>
    <p><%= t("quality_elements.descriptions.#{type}") %></p>

    <dl>
      <% quality_elements.sort_by(&:name).each do |quality_element| %>
        <dt><%= quality_element.name %></dt>
        <dd><%= quality_element.description %></dd>
      <% end %>
    </dl>
  <% end %>
<% end %>

<%= collapsible_field_set_tag "Program", class: 'open' do %>
  <%= f.input :name,
    public: policy.public_attribute?(:name) %>

  <%= f.input :service_description,
    public: policy.public_attribute?(:service_description) %>

  <%= link_to_gicon I18n.t('community_programs.quality_element_description_modal_link'), '#', icon: 'question-sign', id: 'show-quality-element-description' %>

  <%= f.simple_fields_for :primary_quality_element do |element| %>
    <%= element.input :quality_element_id,
      as: :select,
      collection: QualityElement.accessible_by(current_ability).
        programmatic.sort_by(&:name),
      input_html: {class: 'wrap'},
      wrapper_html: {class: "#{f.object.errors.present? && f.object.errors[:primary_quality_element] ? 'has-error' : ''}"},
      public: policy.public_attribute?(:quality_element_id) %>

    <%= element.input :service_type_ids,
      as: :columized_checkboxes,
      collection: ServiceType.accessible_by(current_ability).
        includes(:quality_elements).
        where(quality_elements:
          {id: @community_program.primary_quality_element.quality_element_id}
        ).
        sort_by(&:name),
      columns: 2,
      public: policy.public_attribute?(:service_type_ids)  %>
  <% end %>
<% end %>

<%= collapsible_field_set_tag "Organization Details", class: collapsed do %>
  <%= f.input :organization_id,
    as: :select,
    collection: Organization.accessible_by(current_ability).sort_by(&:name),
    include_blank: true,
    selected: f.object.organization_id.present? ? f.object.organization_id : (
      current_user.role?(:organization_member) ? current_user.organization_id : ""),
    public: policy.public_attribute?(:organization_id)
   %>

  <div id="org-user-wrapper" class="user-add-wrapper">
    <div id="add-org-user"
      class="user-add btn btn-medium btn-create">
      <%= gicon 'plus' %> Create new organization user
    </div>

    <%= f.input :user_id,
      as: :select,
      collection: User.accessible_by(current_ability).
        where(organization_id: @community_program.organization_id).
        sort_by(&:full_name),
      label_method: :full_name,
      wrapper_html: {class: 'clear both'},
      public: policy.public_attribute?(:user_id)  %>
  </div>
<% end %>

<%= collapsible_field_set_tag "Internal Details", class: collapsed do %>
  <%= f.input :receives_district_funding, as: :boolean  %>
  <%= f.input :notes %>
<% end %>
