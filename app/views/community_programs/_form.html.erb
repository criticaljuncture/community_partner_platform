<%= field_set_tag "Program" do %>
  <%= f.input :name, required: true %>

  <%= f.input :service_description %>

  <%= f.simple_fields_for :primary_quality_element do |element| %>
    <%= element.input :quality_element_id,
      as: :select,
      collection: QualityElement.accessible_by(current_ability).sort_by(&:name),
      input_html: {class: 'wrap'},
      required: true %>

    <%= element.input :service_type_ids,
      as: :columized_checkboxes,
      collection: ServiceType.accessible_by(current_ability).
        includes(:quality_elements).
        where(quality_elements:
          {id: @community_program.primary_quality_element.quality_element_id}
        ).
        sort_by(&:name),
      columns: 2,
      required: true %>
  <% end %>

  <%= f.input :site_agreement_on_file%>

  <%#= f.input :mou_on_file %>
<% end %>

<%= field_set_tag "Organization Details" do %>
  <%= f.input :organization_id,
    as: :select,
    collection: Organization.accessible_by(current_ability).
      with_users.sort_by(&:name),
    required: true,
    selected: current_user.role?(:organization_member) ?
      current_user.organization_id : "" %>

  <div id="org-user-wrapper" class="user-add-wrapper">
    <div id="add-org-user"
      class="user-add btn btn-medium btn-create">
      <%= gicon 'plus' %> Create new organization user
    </div>

    <%= f.input :user_id,
      as: :select,
      collection: User.accessible_by(current_ability).
        where(organization_id: @community_program.organization_id).
        sort_by(&:full_name),
      label_method: :full_name,
      required: true,
      wrapper_html: {class: 'clear both'} %>
  </div>
<% end %>

<%= field_set_tag "Schools", class: 'school-programs' do %>
  <%= f.link_to_add :school_programs,
    class: 'btn btn-primary btn-medium add-school',
    data: {target: '.school-programs'} do %>

      <%= gicon 'plus' %> Add a school
  <% end %>

  <%= f.fields_for :school_programs,
    wrapper: :horizontal_form do |spf| %>
    <%= render partial: 'school_programs/school_inputs_form', locals: {
      f: spf,
      parent_f: f
    } %>
  <% end %>
<% end %>

<%= field_set_tag "Program Details" do %>
  <%= f.input :student_population,
    as: :select,
    collection: StudentPopulation.accessible_by(current_ability) %>

  <%= f.input :ethnicity_culture_groups,
    as: :columized_checkboxes,
    collection: EthnicityCultureGroup.accessible_by(current_ability).
      sort_by(&:name),
    columns: 3 %>

  <%= f.input :demographic_groups,
    as: :columized_checkboxes,
    collection: DemographicGroup.accessible_by(current_ability).
      sort_by(&:name),
    columns: 3 %>

  <%= f.input :grade_levels,
    as: :columized_checkboxes,
    collection: GradeLevel.accessible_by(current_ability),
    columns: 4 %>

  <%= f.input :service_times,
    as: :columized_checkboxes,
    collection: ServiceTime.accessible_by(current_ability),
    columns: 3 %>

  <%= f.input :days,
    as: :columized_checkboxes,
    collection: Day.accessible_by(current_ability),
    columns: 3 %>
<% end %>

<%= field_set_tag "Internal Details" do %>
  <%= f.input :notes %>
<% end %>


<%= f.submit 'Save',
  class: "btn #{f.object.verification_required? ? 'btn-primary' : 'btn-success'}"
%>

<% if f.object.verification_required? && can?(:verify, f.object) %>
  <%= f.submit 'Save & Verify', class: "btn btn-success", type: 'verify' %>
  <%= help_hover do %>
    This program needs verification. If for some reason you need to
    update a piece of data but are unable to verify the rest of the program
    information use the 'Save' button. Note: Programs that aren't verified may not
    show up to some users of the system.
  <% end %>
<% end %>
